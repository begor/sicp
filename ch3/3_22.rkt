#lang r5rs
(define (make-queue)
  (let ((front '())
        (rear '()))
    (define (display-queue)
      (display front))
    (define (empty?)
      (null? front))
    (define (insert! item)
      (let ((new-item (cons item '())))
        (cond ((empty?) (set! front new-item)
                        (set! rear new-item))
              (else (set-cdr! rear new-item)
                    (set! rear new-item)))
        (display-queue)))
    (define (delete!)
      (cond ((empty?) (display "error empty queue"))
            (else (set! front (cdr front))
                  (display-queue))))
    (define (dispatch m)
      (cond ((eq? m 'insert) insert!)
            ((eq? m 'delete) delete!)
            ((eq? m 'empty?) empty?)))
    dispatch))